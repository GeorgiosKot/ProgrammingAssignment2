makeCacheMatrix <- function(x = matrix()){
  inv <- NULL
  set <- function(y){
    x <<- y
    inv <<- NULL
    
  }
  get <- function() {x}
  setInverse <- function(inverse) {inv <<- inverse}
  getInverse <- function() {inv}
  list( set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}

CacheSolve <- function(x, ...) {
  inv <- x$getInverse()
  if(!is.null(inv)){
    message("getting cached data")
    return(inv)
    }
  mat <- x$get()
    inv <- solve(mat, ...)
    x$setInverse(inv)
    inv
}

###Testing code

pmatrix<- makeCacheMatrix(matrix(1:4, ncol = 2, nrow = 2))

pmatrix$get()
pmatrix$getInverse()
CacheSolve(pmatrix)
CacheSolve(pmatrix)
pmatrix$getInverse()
